!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
_USR_UI_H_	include/usr_ui.h	2;"	d
_win_border_struct	include/usr_ui.h	/^typedef struct _win_border_struct {$/;"	s
left_s	include/usr_ui.h	/^	chtype 	left_s, right_s, top_s, bottom_s,$/;"	m	struct:_win_border_struct
right_s	include/usr_ui.h	/^	chtype 	left_s, right_s, top_s, bottom_s,$/;"	m	struct:_win_border_struct
top_s	include/usr_ui.h	/^	chtype 	left_s, right_s, top_s, bottom_s,$/;"	m	struct:_win_border_struct
bottom_s	include/usr_ui.h	/^	chtype 	left_s, right_s, top_s, bottom_s,$/;"	m	struct:_win_border_struct
top_l	include/usr_ui.h	/^	 	top_l, top_r, bottom_l, bottom_r;$/;"	m	struct:_win_border_struct
top_r	include/usr_ui.h	/^	 	top_l, top_r, bottom_l, bottom_r;$/;"	m	struct:_win_border_struct
bottom_l	include/usr_ui.h	/^	 	top_l, top_r, bottom_l, bottom_r;$/;"	m	struct:_win_border_struct
bottom_r	include/usr_ui.h	/^	 	top_l, top_r, bottom_l, bottom_r;$/;"	m	struct:_win_border_struct
WIN_BORDER	include/usr_ui.h	/^}WIN_BORDER;$/;"	t	typeref:struct:_win_border_struct
_WIN_struct	include/usr_ui.h	/^typedef struct _WIN_struct {$/;"	s
startx	include/usr_ui.h	/^	int startx, starty;$/;"	m	struct:_WIN_struct
starty	include/usr_ui.h	/^	int startx, starty;$/;"	m	struct:_WIN_struct
height	include/usr_ui.h	/^	int height, width;$/;"	m	struct:_WIN_struct
width	include/usr_ui.h	/^	int height, width;$/;"	m	struct:_WIN_struct
border	include/usr_ui.h	/^	WIN_BORDER border;$/;"	m	struct:_WIN_struct
WIN	include/usr_ui.h	/^}WIN;$/;"	t	typeref:struct:_WIN_struct
SRV_FIFO	include/base.h	13;"	d
CLI_FIFO	include/base.h	14;"	d
pid	include/base.h	/^    pid_t pid;$/;"	m	struct:__anon1
cli_info_t	include/base.h	/^} cli_info_t;$/;"	t	typeref:struct:__anon1
_USR_MGMT_H_	include/usr_mgmt.h	2;"	d
LOGS_FILE	include/usr_mgmt.h	10;"	d
usr	include/usr_mgmt.h	/^    char usr[20];$/;"	m	struct:__anon2
pss	include/usr_mgmt.h	/^    char pss[20];$/;"	m	struct:__anon2
auth	include/usr_mgmt.h	/^    bool auth;$/;"	m	struct:__anon2
login_t	include/usr_mgmt.h	/^} login_t;$/;"	t	typeref:struct:__anon2
player_t	include/usr_mgmt.h	/^typedef struct player_t player_t;$/;"	t	typeref:struct:player_t
player_t	include/usr_mgmt.h	/^struct player_t {$/;"	s
usr_name	include/usr_mgmt.h	/^    char usr_name[20];$/;"	m	struct:player_t
pid	include/usr_mgmt.h	/^    pid_t pid;$/;"	m	struct:player_t
nxt_player	include/usr_mgmt.h	/^    player_t* nxt_player;$/;"	m	struct:player_t
_SIG_MGMT_H_	include/sig_mgmt.h	2;"	d
_PLR_MGMT_H_	include/plr_mgmt.h	2;"	d
_SESSION_MGMT_H_	include/ses_mgmt.h	2;"	d
WIDTH	include/ses_mgmt.h	13;"	d
HEIGHT	include/ses_mgmt.h	14;"	d
game_result	include/ses_mgmt.h	/^    int game_result[2];$/;"	m	struct:__anon3
run	include/ses_mgmt.h	/^    int run;$/;"	m	struct:__anon3
seconds	include/ses_mgmt.h	/^    int seconds, numPlayers;$/;"	m	struct:__anon3
numPlayers	include/ses_mgmt.h	/^    int seconds, numPlayers;$/;"	m	struct:__anon3
game_stat_t	include/ses_mgmt.h	/^} game_stat_t;$/;"	t	typeref:struct:__anon3
game_control_t	include/ses_mgmt.h	/^typedef struct game_control_t game_control_t;$/;"	t	typeref:struct:game_control_t
game_control_t	include/ses_mgmt.h	/^struct game_control_t {$/;"	s
role	include/ses_mgmt.h	/^    int role, posX, posY, id;$/;"	m	struct:game_control_t
posX	include/ses_mgmt.h	/^    int role, posX, posY, id;$/;"	m	struct:game_control_t
posY	include/ses_mgmt.h	/^    int role, posX, posY, id;$/;"	m	struct:game_control_t
id	include/ses_mgmt.h	/^    int role, posX, posY, id;$/;"	m	struct:game_control_t
tid	include/ses_mgmt.h	/^    pthread_t tid;$/;"	m	struct:game_control_t
next	include/ses_mgmt.h	/^    game_control_t * next, * head;$/;"	m	struct:game_control_t
head	include/ses_mgmt.h	/^    game_control_t * next, * head;$/;"	m	struct:game_control_t
client_data_t	include/ses_mgmt.h	/^typedef struct client_data_t client_data_t;$/;"	t	typeref:struct:client_data_t
client_data_t	include/ses_mgmt.h	/^struct client_data_t {$/;"	s
role	include/ses_mgmt.h	/^    int role, posX, posY;$/;"	m	struct:client_data_t
posX	include/ses_mgmt.h	/^    int role, posX, posY;$/;"	m	struct:client_data_t
posY	include/ses_mgmt.h	/^    int role, posX, posY;$/;"	m	struct:client_data_t
_THD_MGMT_H	include/thd_mgmt.h	2;"	d
END_THD	include/thd_mgmt.h	/^bool END_THD;$/;"	v
CC	Makefile	/^CC=gcc$/;"	m
IDIR	Makefile	/^IDIR=include$/;"	m
CFLAGS	Makefile	/^CFLAGS=-I$(IDIR) -Wall -g -lncurses -lpthread$/;"	m
ODIR	Makefile	/^ODIR=obj$/;"	m
SRC	Makefile	/^SRC=src$/;"	m
_DEPS	Makefile	/^_DEPS = base.h usr_mgmt.h usr_ui.h thd_mgmt.h ses_mgmt.h$/;"	m
DEPS	Makefile	/^DEPS = $(patsubst %,$(IDIR)\/%,$(_DEPS))$/;"	m
_OBJ	Makefile	/^_OBJ = server.o client.o usr_mgmt.o usr_ui.o thd_mgmt.o ses_mgmt.o$/;"	m
OBJ	Makefile	/^OBJ= $(patsubst %,$(ODIR)\/%,$(_OBJ))$/;"	m
randNum	src/ses_mgmt.c	/^int randNum(int min, int max)$/;"	f
moveCheck	src/ses_mgmt.c	/^int moveCheck(int x, int y, game_control_t * head)$/;"	f
PlayerMovement	src/ses_mgmt.c	/^void * PlayerMovement(void * arg)$/;"	f
movePlayer	src/ses_mgmt.c	/^void movePlayer(game_control_t * player)$/;"	f
getNumPlayers	src/ses_mgmt.c	/^void getNumPlayers(int * numDef, int * numOff)$/;"	f
initPlayers	src/ses_mgmt.c	/^void initPlayers(game_stat_t * game, game_control_t ** head,$/;"	f
set_game	src/ses_mgmt.c	/^void set_game(game_stat_t * game, game_control_t ** head, int sec)$/;"	f
send_to_cli	src/ses_mgmt.c	/^int send_to_cli(game_control_t * head, int cli_fd, int numPlayers){$/;"	f
EXIT	src/server.c	/^int EXIT = 1;$/;"	v
main	src/server.c	/^int main(int argc, char *argv[]){$/;"	f
cmd_control	src/server.c	/^void cmd_control(char *cmd, char* arg1, char* arg2){$/;"	f
signal_handler_srv	src/server.c	/^void signal_handler_srv(int sig){$/;"	f
set_crd	src/usr_mgmt.c	/^void set_crd(char usr[20], char pss[20]){$/;"	f
usr_auth	src/usr_mgmt.c	/^bool usr_auth(char usr[20], char pss[20], char * file_name, bool custom_file){$/;"	f
save_player	src/usr_mgmt.c	/^void save_player(player_t** head, char usr[20], int pid){$/;"	f
add_player	src/usr_mgmt.c	/^player_t* add_player( char usr[20], int pid){$/;"	f
chk_player	src/usr_mgmt.c	/^bool chk_player(player_t *head ,char usr[20]){$/;"	f
list_player	src/usr_mgmt.c	/^int list_player(player_t *head ){$/;"	f
sign_in	src/usr_mgmt.c	/^void sign_in(char* new_usr, char* new_pwd, char* file_name, bool custom_file){$/;"	f
free_mem	src/usr_mgmt.c	/^void free_mem(player_t* head) {$/;"	f
exit_warning	src/usr_mgmt.c	/^void exit_warning(player_t* list){$/;"	f
rdr_map	src/thd_mgmt.c	/^void* rdr_map(WIN* p_win){$/;"	f
EXIT	src/client.c	/^int EXIT = 1;$/;"	v
main	src/client.c	/^int main(int argc, char const *argv[]) {$/;"	f
signal_handler_cli	src/client.c	/^void signal_handler_cli(int sig){$/;"	f
init_win_params	src/usr_ui.c	/^void init_win_params(WIN *p_win){$/;"	f
create_box	src/usr_ui.c	/^void create_box(WIN *p_win){$/;"	f
init_players	src/usr_ui.c	/^void init_players(WIN* p_win, client_data_t *p_pos,int num_p){$/;"	f
init_fld	src/usr_ui.c	/^void init_fld(WIN* p_win){$/;"	f
